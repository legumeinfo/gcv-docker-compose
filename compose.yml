services:
  gcv:
    restart: always
    profiles: [gcv, all]

  reverse-proxy:
    image: traefik:v2.9
    ports:
      - "${TRAEFIK_PORT:-80}:80"
    environment:
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_GRPC_ADDRESS=:81
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
    profiles: [services, all]

  envoy:
    image: envoyproxy/envoy:v1.24-latest
    environment:
      - MICROSERVICES_PATH=${MICROSERVICES_PATH:-/gcv/microservices}
    volumes:
      - ./envoy/templates/:/etc/envoy/templates/
      - ./envoy/docker-entrypoint.d/:/docker-entrypoint.d/
      - ./envoy/microservices-entrypoint.sh:/microservices-entrypoint.sh
    entrypoint: /microservices-entrypoint.sh
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.envoy.rule=Host(`${DOMAIN}`) && PathPrefix(`${MICROSERVICES_PATH:-/gcv/microservices}/{service:(genes|chromosome|micro-synteny-search|macro-synteny-blocks|chromosome-region|search)}/grpc-web`)"
      - "traefik.http.services.envoy.loadbalancer.server.port=8080"
      - "traefik.http.routers.envoy.entrypoints=web"
    profiles: [services, all]

  redisearch:
    image: redislabs/redisearch:2.4.15
    healthcheck:
      test: "redis-cli ping | grep -q PONG"
      start_period: ${REDIS_START_PERIOD:-90s}
    expose:
      - "6379"
    volumes:
      - ./data/redis:/data:rw
    command:
      - --loadmodule /usr/lib/redis/modules/redisearch.so
      - --save ''
    profiles: [redis_loader, services, all]

  chromosome:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chromosome.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/chromosome`)"
      - "traefik.http.middlewares.chromosome-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/chromosome"
      - "traefik.http.routers.chromosome.middlewares=chromosome-stripprefix@docker"
      - "traefik.http.routers.chromosome.entrypoints=web"
    profiles: [services, all]

  chromosome_search:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    command:
      - --no-http
    expose:
      - "81"
    profiles: [services, all]

  chromosome_region:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chromosome-region.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/chromosome-region`)"
      - "traefik.http.middlewares.chromosome-region-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/chromosome-region"
      - "traefik.http.routers.chromosome-region.middlewares=chromosome-region-stripprefix@docker"
      - "traefik.http.routers.chromosome-region.entrypoints=web"
    profiles: [services, all]

  genes:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genes.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/genes`)"
      - "traefik.http.middlewares.genes-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/genes"
      - "traefik.http.routers.genes.middlewares=genes-stripprefix@docker"
      - "traefik.http.routers.genes.entrypoints=web"
    profiles: [services, all]

  gene_search:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    command:
      - --no-http
    expose:
      - "81"
    profiles: [services, all]

  macro_synteny_blocks:
    depends_on:
      redisearch:
        condition: service_healthy
      pairwise_macro_synteny_blocks:
        condition: service_started
    environment:
      REDIS_HOST: redisearch
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
      PAIRWISE_ADDR: pairwise_macro_synteny_blocks:81
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.macro-synteny-blocks.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/macro-synteny-blocks`)"
      - "traefik.http.middlewares.macro-synteny-blocks-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/macro-synteny-blocks"
      - "traefik.http.routers.macro-synteny-blocks.middlewares=macro-synteny-blocks-stripprefix@docker"
      - "traefik.http.routers.macro-synteny-blocks.entrypoints=web"
    profiles: [services, all]

  micro_synteny_search:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.micro-synteny-search.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/micro-synteny-search`)"
      - "traefik.http.middlewares.micro-synteny-search-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/micro-synteny-search"
      - "traefik.http.routers.micro-synteny-search.middlewares=micro-synteny-search-stripprefix@docker"
      - "traefik.http.routers.micro-synteny-search.entrypoints=web"
    profiles: [services, all]

  pairwise_macro_synteny_blocks:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
    command:
      - --no-http
    expose:
      - "81"
    profiles: [services, all]

  search:
    depends_on:
      gene_search:
        condition: service_started
      chromosome_search:
        condition: service_started
      chromosome_region:
        condition: service_started
    environment:
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "80"
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: "81"
      GENE_SEARCH_ADDR: gene_search:81
      CHROMOSOME_SEARCH_ADDR: chromosome_search:81
      CHROMOSOME_REGION_ADDR: chromosome_region:81
    expose:
      - "80"
      - "81"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.search.rule=Host(`${DOMAIN}`) && Path(`${MICROSERVICES_PATH:-/gcv/microservices}/search`)"
      - "traefik.http.middlewares.search-stripprefix.stripprefix.prefixes=${MICROSERVICES_PATH:-/gcv/microservices}/search"
      - "traefik.http.routers.search.middlewares=search-stripprefix@docker"
      - "traefik.http.routers.search.entrypoints=web"
    profiles: [services, all]

  redis_loader:
    depends_on:
      redisearch:
        condition: service_healthy
    environment:
      REDIS_HOST: redisearch
    profiles: [redis_loader]
